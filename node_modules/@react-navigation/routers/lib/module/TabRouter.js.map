{"version":3,"sources":["TabRouter.tsx"],"names":["shortid","BaseRouter","TabActions","jumpTo","name","params","type","payload","changeIndex","state","index","previousKey","routes","key","currentKey","routeKeyHistory","filter","concat","TabRouter","initialRouteName","backBehavior","router","getInitialState","routeNames","routeParamList","undefined","includes","indexOf","stale","map","getRehydratedState","partialState","route","find","r","Math","min","max","length","getStateForRouteNamesChange","getStateForRouteFocus","findIndex","getStateForAction","action","i","slice","shouldActionChangeFocus","actionCreators"],"mappings":"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","sourcesContent":["import shortid from 'shortid';\nimport {\n  CommonAction,\n  BaseRouter,\n  PartialState,\n  NavigationState,\n  DefaultRouterOptions,\n  Router,\n  Route,\n} from '@react-navigation/core';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: 'initialRoute' | 'order' | 'history' | 'none';\n};\n\nexport type TabNavigationState = NavigationState & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  routeKeyHistory: string[];\n};\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst changeIndex = (state: TabNavigationState, index: number) => {\n  const previousKey = state.routes[state.index].key;\n  const currentKey = state.routes[index].key;\n  const routeKeyHistory = state.routeKeyHistory\n    .filter(key => key !== currentKey && key !== previousKey)\n    .concat(previousKey);\n\n  return {\n    ...state,\n    index,\n    routeKeyHistory,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'history',\n}: TabRouterOptions) {\n  const router: Router<TabNavigationState, TabActionType | CommonAction> = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${shortid()}`,\n        index,\n        routeNames,\n        routeKeyHistory: [],\n        routes: routeNames.map(name => ({\n          name,\n          key: `${name}-${shortid()}`,\n          params: routeParamList[name],\n        })),\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map(name => {\n        const route = (state as PartialState<TabNavigationState>).routes.find(\n          r => r.name === name\n        );\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${shortid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(\n          typeof state.index === 'number'\n            ? state.index\n            : routeNames.indexOf(state.routes[0].name),\n          0\n        ),\n        routes.length - 1\n      );\n\n      const routeKeyHistory = state.routeKeyHistory\n        ? state.routeKeyHistory.filter(key => routes.find(r => r.key === key))\n        : [];\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${shortid()}`,\n        index,\n        routeNames,\n        routeKeyHistory,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = routeNames.map(\n        name =>\n          state.routes.find(r => r.name === name) || {\n            name,\n            key: `${name}-${shortid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex(r => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index);\n    },\n\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              route => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              route => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes:\n                action.payload.params !== undefined\n                  ? state.routes.map((route, i) =>\n                      i === index\n                        ? {\n                            ...route,\n                            params: {\n                              ...route.params,\n                              ...action.payload.params,\n                            },\n                          }\n                        : route\n                    )\n                  : state.routes,\n            },\n            index\n          );\n        }\n\n        case 'GO_BACK':\n          switch (backBehavior) {\n            case 'initialRoute': {\n              const index = initialRouteName\n                ? state.routeNames.indexOf(initialRouteName)\n                : 0;\n\n              if (index === -1 || index === state.index) {\n                return null;\n              }\n\n              return { ...state, index };\n            }\n\n            case 'order':\n              if (state.index === 0) {\n                return null;\n              }\n\n              return {\n                ...state,\n                index: state.index - 1,\n              };\n\n            case 'history': {\n              const previousKey =\n                state.routeKeyHistory[state.routeKeyHistory.length - 1];\n              const index = state.routes.findIndex(\n                route => route.key === previousKey\n              );\n\n              if (index === -1) {\n                return null;\n              }\n\n              return {\n                ...state,\n                routeKeyHistory: state.routeKeyHistory.slice(0, -1),\n                index,\n              };\n            }\n\n            default:\n              return null;\n          }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"]}