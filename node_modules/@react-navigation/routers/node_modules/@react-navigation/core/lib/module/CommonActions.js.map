{"version":3,"sources":["CommonActions.tsx"],"names":["goBack","type","navigate","payload","name","params","hasOwnProperty","Error","reset","state","setParams"],"mappings":"AA6BA,MAAO,SAASA,CAAAA,MAAT,EAA0B,CAC/B,MAAO,CAAEC,IAAI,CAAE,SAAR,CAAP,CACD,CAQD,MAAO,SAASC,CAAAA,QAAT,EAAwC,CAC7C,GAAI,qDAAmB,QAAvB,CAAiC,CAC/B,MAAO,CAAED,IAAI,CAAE,UAAR,CAAoBE,OAAO,CAAE,CAAEC,IAAI,2CAAN,CAAiBC,MAAM,2CAAvB,CAA7B,CAAP,CACD,CAFD,IAEO,CACL,GAAMF,CAAAA,OAAO,2CAAb,CAEA,GAAI,CAACA,OAAO,CAACG,cAAR,CAAuB,KAAvB,CAAD,EAAkC,CAACH,OAAO,CAACG,cAAR,CAAuB,MAAvB,CAAvC,CAAuE,CACrE,KAAM,IAAIC,CAAAA,KAAJ,CACJ,wFADI,CAAN,CAGD,CAED,MAAO,CAAEN,IAAI,CAAE,UAAR,CAAoBE,OAAO,CAAPA,OAApB,CAAP,CACD,CACF,CAED,MAAO,SAASK,CAAAA,KAAT,CAAeC,KAAf,CAA6D,CAClE,MAAO,CAAER,IAAI,CAAE,OAAR,CAAiBE,OAAO,CAAEM,KAA1B,CAAP,CACD,CAED,MAAO,SAASC,CAAAA,SAAT,CAAmBL,MAAnB,CAA2C,CAChD,MAAO,CAAEJ,IAAI,CAAE,YAAR,CAAsBE,OAAO,CAAE,CAAEE,MAAM,CAANA,MAAF,CAA/B,CAAP,CACD","sourcesContent":["import { NavigationState, PartialState } from './types';\n\nexport type Action =\n  | {\n      type: 'GO_BACK';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'NAVIGATE';\n      payload:\n        | { key: string; name?: undefined; params?: object }\n        | { name: string; key?: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'RESET';\n      payload: PartialState<NavigationState>;\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'SET_PARAMS';\n      payload: { params?: object };\n      source?: string;\n      target?: string;\n    };\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  route:\n    | { key: string; params?: object }\n    | { name: string; key?: string; params?: object }\n): Action;\nexport function navigate(name: string, params?: object): Action;\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    return { type: 'NAVIGATE', payload: { name: args[0], params: args[1] } };\n  } else {\n    const payload = args[0];\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error(\n        'While calling navigate with an object as the argument, you need to specify name or key'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function reset(state: PartialState<NavigationState>): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n"]}